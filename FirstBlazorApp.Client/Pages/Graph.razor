@page "/graph"
@using Telerik.Blazor.Components.TextBox;
@using Telerik.Blazor.Components.Button;
@inject HttpClient HttpClient;
@inject ClientState State;

<div>
    Add Symbol
    <TelerikTextBox Id="SymbolToAddId" bind-Value="@SymbolToAdd" />
    <TelerikButton OnClick="() => State.AddSymbols(SymbolToAdd)">Add</TelerikButton>
</div>

    @foreach (var symbolToDisplay in State.SymbolsToDisplay)
    {
        <StockGraph SymbolToDisplay="@symbolToDisplay" OnRemoved="() => State.RemoveSymbol(symbolToDisplay)"/>
    }

@functions {
        string SymbolToAdd;
        List<string> ListOfGraphsToDisplay = new List<string>();

        static DateTime date = DateTime.Now.AddDays(-1);

    protected async override Task OnInitAsync()
    {
        State.StateChanged += OnClientStateChanged;
    }

    void OnClientStateChanged(object sender, EventArgs e)
    {
        foreach (var symbol in State.SymbolsToDisplay)
        {
            Console.WriteLine(symbol);
        }

    }
}
@page "/graph"
@using Telerik.Blazor.Components.TextBox;
@using Telerik.Blazor.Components.Button;
@using System.Threading;
@inject HttpClient HttpClient;
@inject ClientState ClientState;

<div>
    Add Symbol
    <TelerikTextBox Id="SymbolToAddId" bind-Value="@SymbolToAdd" />
    <TelerikButton OnClick="() => ClientState.AddSymbols(SymbolToAdd)">Add</TelerikButton>
</div>

    @foreach (var symbolToDisplay in ClientState.SymbolsToDisplay)
    {
        <StockGraph SymbolToDisplay="@symbolToDisplay" OnRemoved="() => ClientState.RemoveSymbol(symbolToDisplay)"/>
    }

@functions {
    string SymbolToAdd;
    List<string> ListOfGraphsToDisplay = new List<string>();

    static DateTime date = DateTime.Now.AddDays(-1);

    protected async override Task OnInitAsync()
    {
        ClientState.StateChanged += OnClientStateChanged;
    }

    void OnClientStateChanged(object sender, EventArgs e) => StateHasChanged();
        
}

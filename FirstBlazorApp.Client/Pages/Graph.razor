@page "/graph"
@using Telerik.Blazor.Components.TextBox;
@using Telerik.Blazor.Components.Button;
@using  FirstBlazorApp.Shared.Services;
@inject HttpClient HttpClient;
@inject ClientState State;
@inject ExportStockValuesToExcelService ServiceToExportToExcel;
@inject IJSRuntime JS
@implements IDisposable;

<div>
    Add Symbol
    <TelerikTextBox Id="SymbolToAddId" bind-Value="@SymbolToAdd" />
    <TelerikButton OnClick="() => State.AddSymbols(SymbolToAdd)">Add</TelerikButton>
</div>
<div>
    <TelerikButton OnClick="() => ExportGraphs()">Export Graphs</TelerikButton>
</div>

@foreach (var symbolToDisplay in State.SymbolsToDisplay)
{
    @symbolToDisplay
    <StockGraph SymbolToDisplay="@symbolToDisplay" OnRemoved="() => State.RemoveSymbol(symbolToDisplay)" />
}

@functions {
    string SymbolToAdd;
    List<string> ListOfGraphsToDisplay = new List<string>();

    protected async override Task OnInitAsync()
    {
        State.StateChanged += OnClientStateChanged;
    }

    void OnClientStateChanged(object sender, EventArgs e)
    {
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        State.ClearAllStockValues();
    }

    public void ExportGraphs()
    {
        var data = ServiceToExportToExcel.GenerateFile(State.ListOfStockValues.Values.ToList());
        FileUtil.SaveAs(JS, "StockValues.xlsx", data);
    }
}
